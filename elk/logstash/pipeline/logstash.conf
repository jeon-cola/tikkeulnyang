input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    codec => line
  }
}

filter {
 # type이 없을 경우 기본값 설정
  if ![fields][type] {
    mutate {
      add_field => { "[fields][type]" => "unknown" }
    }
  }
  # 호스트 필드 이름 변경 (매핑 오류 해결)
  mutate {
    rename => { "host" => "hostname" }
  }
  # 모든 로그에 대해 message를 log_message로 복사
  mutate {
    add_field => { "log_message" => "%{message}" }
  }
  # 바이너리 또는 의미 없는 제어문자가 포함된 로그는 필터링
  if [message] =~ /^\u0000/ {
    mutate {
      add_tag => [ "invalid_message" ]
    }
    drop {}
  }


  # Spring Boot 로그 처리
  if [fields][type] in ["spring-boot", "docker", "jenkins", "unknown"] {
    grok {
      match => { "message" => [
          # Spring Boot 기본 패턴
          "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{DATA:thread} %{DATA:class} - %{GREEDYDATA:log_message}",

          # Jenkins 로그 패턴 예시 (예: 2025-04-06 15:47:58.137+0000 [id=147016] INFO ...)
          "%{TIMESTAMP_ISO8601:timestamp}[\s\t]*\[id=%{NUMBER:thread_id}\][\s\t]*%{LOGLEVEL:log_level}[\s\t]*%{GREEDYDATA:log_message}"

        ]
      }
    }

    date {
      match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
      target => "@timestamp"
    }

    # 로그인 시도 감지
    if [log_message] =~ "login attempt" {
      mutate {
        add_field => { "event_type" => "login_attempt" }
      }

      # 로그인 성공 or 실패 구분
      if [log_message] =~ "failed" or [log_message] =~ "invalid" {
        mutate {
          add_field => { "login_status" => "failed" }
          add_tag => [ "security_alert" ]
        }
      } else if [log_message] =~ "success" {
        mutate {
          add_field => { "login_status" => "success" }
        }
      }
    }

    # 금융 거래 감지
    if [log_message] =~ "transaction" or [log_message] =~ "payment" or [log_message] =~ "transfer" {
      mutate {
        add_field => { "event_type" => "financial_transaction" }
        add_tag => [ "transaction" ]
      }

      # 거래 금액 추출 (예시 패턴)
      grok {
        match => { "log_message" => ".*amount.*:?\s*%{NUMBER:transaction_amount:float}" }
      }

      # 이상 거래 탐지 (고액 거래)
      if [transaction_amount] and [transaction_amount] > 1000000 {
        mutate {
          add_tag => [ "high_value_transaction", "financial_alert" ]
        }
      }
    }
    # IP 기반 위험 감지
    if [log_message] =~ "IP address" {
      grok {
        match => { "log_message" => "%{IP: source_ip}" }
      }
      # 지리적 위치 정보 추가
      geoip {
        source => "source_ip"
        target => "geoip"
      }

      # 국가 기반 비정상 접속 탐지
      if [geoip][country_name] and [geoip][country_name] != "Your Expected Country" {
         mutate {
           add_tag => [ "foreign_access_alert" ]
         }
      }
    }
    # 시스템 리소스 모니터링
    if [log_message] =~ "CPU" or [log_message] =~ "memory" {
      grok {
        match => {
          "log_message" => [
            "CPU usage: %{NUMBER:cpu_usage:float}%%",
            "Memory usage: %{NUMBER:memory_usage:float}%%"
          ]
        }
      }

    # 리소스 임계값 초과 감지
    if [cpu_usage] > 80 or [memory_usage] > 85 {
      mutate {
        add_tag => [ "resource_alert" ]
        add_field => { "alert_type" => "high_resource_usage" }
      }
    }
  }

    # 민감한 작업 모니터링
    if [log_message] =~ "admin" or [log_message] =~ "critical action" {
      mutate {
        add_tag => [ "admin_action" ]
        add_field => { "action_sensitivity" => "high" }
      }
    }
  }

  # Docker 로그 처리
  if [container] {
    mutate {
      add_field => { "environment" => "docker" }
    }

    # 컨테이너별 로그 분류
    if [container][name] =~ "mysql" {
      mutate {
        add_field => { "service" => "database" }
      }
    } else if [container][name] =~ "backend" {
      mutate {
        add_field => { "service" => "api" }
      }
    }
  }
}

output {
  file {
      path => "/tmp/debug_raw_message.log"
      codec => rubydebug
    }
  stdout {
      codec => rubydebug
    }

  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[fields][type]}-%{+YYYY.MM.dd}"
    manage_template => false
  }

  # 보안 관련 이벤트는 별도 인덱스로 저장
  if "security_alert" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "security-events-%{+YYYY.MM.dd}"
    }
  }

  # 금융 거래 관련 이벤트는 별도 인덱스로 저장
  if "transaction" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "financial-transactions-%{+YYYY.MM.dd}"
    }
  }
  # 리소스 알림 별도 인덱스
   if "resource_alert" in [tags] {
     elasticsearch {
       hosts => ["elasticsearch:9200"]
       index => "resource-alerts-%{+YYYY.MM.dd}"
     }
   }

   # 외부 접속 알림 인덱스
   if "foreign_access_alert" in [tags] {
     elasticsearch {
       hosts => ["elasticsearch:9200"]
       index => "foreign-access-alerts-%{+YYYY.MM.dd}"
     }
   }

   # 관리자 작업 별도 인덱스
   if "admin_action" in [tags] {
     elasticsearch {
       hosts => ["elasticsearch:9200"]
       index => "admin-actions-%{+YYYY.MM.dd}"
     }
   }

   # 의미 없는 메시지 제거 로그 방지
  if "invalid_message" in [tags] {
    # 굳이 Elasticsearch로 보내지 않음
    null {}
  }
}