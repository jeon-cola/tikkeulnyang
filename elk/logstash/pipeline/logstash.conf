input {
  beats {
    port => 5044
  }
  tcp {
    port => 5000
    codec => json
  }
}

filter {
  # JSON 형식인 경우만 파싱 시도 (한 번만)
  if [message] =~ /^\{/ {
    json {
      source => "message"
      add_tag => [ "_json_parse_success" ]
      tag_on_failure => [ "_json_parse_failure" ]  # 실패 시 태그 추가 (옵션)
    }
  }

  # JSON 파싱 성공한 경우에만 아래 처리 진행
  if "_json_parse_success" in [tags] {
    # 로그인 관련 이벤트 처리
    if [event_type] == "login_attempt" {
      mutate {
        add_tag => [ "security_event" ]
      }
    }

    if [event_type] == "login_success" {
      mutate {
        add_tag => [ "authentication_success" ]
      }
    }

    if [event_type] in ["login_error", "login_anomaly"] {
      mutate {
        add_tag => [ "security_alert" ]
      }
    }
  }
}


output {
  file {
    path => "/tmp/debug_raw_message.log"
    codec => rubydebug
  }
  stdout {
    codec => rubydebug
  }

  # 기본 로그 저장
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "app-logs-%{+YYYY.MM.dd}"
  }

  # 보안 이벤트 전용 인덱스
  if "security_event" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "security-events-%{+YYYY.MM.dd}"
    }
  }

  # 인증 성공 이벤트 전용 인덱스
  if "authentication_success" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "authentication-success-%{+YYYY.MM.dd}"
    }
  }

  # 보안 알림 인덱스
  if "security_alert" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "security-alerts-%{+YYYY.MM.dd}"
    }
  }
}